from dotenv import load_dotenv
import os
import sys

def validate_env():
    # Load .env variables
    load_dotenv()

    # Fetch required keys for Spot and Futures API
    spot_api_key = os.getenv('BINANCE_SPOT_API_KEY')
    spot_api_secret = os.getenv('BINANCE_SPOT_API_SECRET')
    futures_api_key = os.getenv('BINANCE_FUTURES_API_KEY')
    futures_api_secret = os.getenv('BINANCE_FUTURES_API_SECRET')
    use_testnet = os.getenv('USE_TESTNET')

    # Validate
    missing = []

    # Check Spot API keys
    if not spot_api_key or spot_api_key == "your_spot_api_key_here":
        missing.append("BINANCE_SPOT_API_KEY")
    if not spot_api_secret or spot_api_secret == "your_spot_api_secret_here":
        missing.append("BINANCE_SPOT_API_SECRET")
    
    # Check Futures API keys
    if not futures_api_key or futures_api_key == "your_futures_api_key_here":
        missing.append("BINANCE_FUTURES_API_KEY")
    if not futures_api_secret or futures_api_secret == "your_futures_api_secret_here":
        missing.append("BINANCE_FUTURES_API_SECRET")

    # Check testnet setting
    if use_testnet not in ["True", "False"]:
        missing.append("USE_TESTNET (should be True or False)")

    if missing:
        print(f"❌ Missing or invalid environment variables: {', '.join(missing)}")
        sys.exit(1)
    else:
        print("✅ All environment variables are set correctly!")

if __name__ == "__main__":
    validate_env()
